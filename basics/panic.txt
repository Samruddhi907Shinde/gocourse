package main

import "fmt"

func main() {

	// Panic is a built-in function that stops the normal execution of a function immediately
	// When a panic is encountered the function stops executing current activites, unwinds the stack
	// and then executes any deferred functions
	// Panic is typically used to indicate an unexpected error condition where the program cannot proceed safely
	// Defer will execute when the function returns a value , but it will also execute even when the function is panicking

	// panic(interface{})

	// Example of valid input
	process(10)

	// Example of an invalid input
	process(-3)

}

func process(input int) {

	defer fmt.Println("Deferred 1")
	defer fmt.Println("Deferred 2")

	if input < 0 {
		fmt.Println("Before Panic")
		panic("input must be non-negative number")
		// fmt.Println("After Panic")

		// defer fmt.Println("Deferred 3")
	}
	fmt.Println("Processing input:", input)
}
